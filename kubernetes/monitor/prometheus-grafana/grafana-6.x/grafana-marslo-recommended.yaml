# sa
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: grafana
  name: grafana-admin
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: grafana-admin
  labels:
    k8s-app: grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: kubernetes-dashboard

# pvc
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: grafana
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/opt/grafana"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: grafana
  namespace: kubernetes-dashboard
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: "manual"
  volumeName: grafana

# deploy
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: kubernetes-dashboard
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - kubems-01
      containers:
      - image: grafana/grafana
        name: grafana
        imagePullPolicy: IfNotPresent
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 512m
            memory: 512Mi
          requests:
            cpu: 256m
            memory: 256Mi
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_SERVER_DOMAIN
            value: "grafana.marslo.com"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "admin"
          - name: GF_INSTALL_PLUGINS
            value: "grafana-kubernetes-app"
          - name: GF_SERVER_ROOT_URL
            value: "/"
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: grafana
      volumes:
      - name: grafana-persistent-storage
        persistentVolumeClaim:
          claimName: grafana

# svc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: kubernetes-dashboard
  labels:
    app: grafana
    component: core
spec:
  type: NodePort
  ports:
    - port: 3000
  selector:
    app: grafana
    component: core

# ing
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
   name: grafana
   namespace: kubernetes-dashboard
spec:
   rules:
   - host: k8s.grafana
     http:
       paths:
       - path: /
         backend:
          serviceName: grafana
          servicePort: 3000
