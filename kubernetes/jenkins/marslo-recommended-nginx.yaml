# namespace
---
kind: Namespace
apiVersion: v1
metadata:
  name: devops
  labels:
    name: devops

# pvc
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: marslo-jenkins-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/home/marslo/MARSLO_JENKINS"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: marslo-jenkins-pvc
  namespace: marslo
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: "manual"
  volumeName: marslo-jenkins-pv

# sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: marlso-jenkins
  name: jenkins-admin
  namespace: devops
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: jenkins-admin
  labels:
    k8s-app: marlso-jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins-admin
  namespace: devops

# deploy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: marlso-jenkins
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marlso-jenkins
  template:
    metadata:
      labels:
        app: marlso-jenkins
    spec:
      containers:
        - name: marlso-jenkins
          image: jenkins/jenkins:2.196
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: -Xms2048m
                     -Xmx10240m
                     -XX:PermSize=2048m
                     -XX:MaxPermSize=10240m
                     -XX:+UseG1GC
                     -Duser.timezone='America/Los_Angeles'
                     -Dhudson.model.DirectoryBrowserSupport.CSP="sandbox allow-same-origin allow-scripts; default-src 'self'; script-src * 'unsafe-eval'; img-src *; style-src * 'unsafe-inline'; font-src *;"
                     -Djenkins.slaves.NioChannelSelector.disabled=true
                     -Djenkins.slaves.JnlpSlaveAgentProtocol3.enabled=false
                     -Djava.awt.headless=true
                     -Djenkins.security.ClassFilterImpl.SUPPRESS_WHITELIST=true
                     -Dhudson.model.ParametersAction.keepUndefinedParameters=true
                     -Dcom.cloudbees.workflow.rest.external.ChangeSetExt.resolveCommitAuthors=true
                     -Djenkins.install.runSetupWizard=true
                     -Dpermissive-script-security.enabled=true
                     -DsessionTimeout=1440
                     -DsessionEviction=43200
                     -Dorg.eclipse.jetty.server.Request.maxFormContentSize=5000000
            - name: JNLP_PROTOCOL_OPTS
              value: -Dorg.jenkinsci.remoting.engine.JnlpProtocol3.disabled=false
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
            - name: cli-port
              containerPort: 38238
          volumeMounts:
            - name: marlso-jenkins-home
              mountPath: /var/jenkins_home
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: docker
              mountPath: /usr/bin/docker
      nodeSelector:
        jenkins: master
      volumes:
        - name: marlso-jenkins-home
          persistentVolumeClaim:
            claimName: marslo-jenkins-pvc
          # hostPath:
            # path: /home/marslo/MARSLO_JENKINS
            # type: Directory
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: docker
          hostPath:
            path: /usr/bin/docker
      nodeSelector:
        jenkins: "true"
      serviceAccount: "jenkins-admin"

# svc
---
apiVersion: v1
kind: Service
metadata:
  name: marlso-jenkins
  namespace: devops
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http-port
  selector:
    app: marlso-jenkins
  externalIPs:
    # - <virtual ip address>
    - 1.2.3.4
---
apiVersion: v1
kind: Service
metadata:
  name: marlso-jenkins-discovery
  namespace: devops
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: LoadBalancer
  externalIPs:
    # - <virtual ip address>
    - 1.2.3.4
  externalTrafficPolicy: Cluster
  ports:
    - name: jnlp
      port: 30380
      targetPort: jnlp-port
    - name: cli
      nodePort: 32380
      port: 38238
      targetPort: cli-port
  selector:
    app: marlso-jenkins
  externalIPs:
    - 10.69.78.15

# nginx ingress
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: marlso-jenkins-ing
  namespace: devops
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    kubernetes.io/ingress.allow-http: "false"
spec:
  tls:
  - hosts:
    - marslo-jenkins.marslo.com
    secretName: marslo-certs
  rules:
  - host: marslo-jenkins.marslo.com
    http:
      paths:
      - path:
        backend:
          serviceName: marlso-jenkins
          servicePort: http
